name: release
on:
  workflow_dispatch:
  workflow_run:
    workflows: ["build"]
    types: [completed]

jobs:
  release:
    if: github.event.workflow_run.conclusion == 'success'
    name: release
    runs-on: ubuntu-latest
    steps:  
      - uses: actions/checkout@v3

      - name: Get Changelog Entry
        id: changelog_reader
        uses: ocavue/changelog-parser-action@v1
        with:
          removeMarkdown: false

      - name: Download artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: ${{ github.event.workflow_run.workflow_id }}
          workflow_conclusion: success
          name: latest-builds
          path: bin

      - name: untar linux executable
        run: tar -xzf bin/filedo-Linux-X64.tar.gz -C bin

      - name: version
        run: echo "version=$(./bin/filedo --version)" >> $GITHUB_OUTPUT
        id: version

      - name: add version to artefact names
        run: |
          mv bin/filedo-Linux-X64.tar.gz bin/filedo-Linux-X64-${{ steps.version.outputs.version }}.tar.gz
        # mv bin/filedo-MacOS-X64.tar.gz bin/filedo-MacOS-X64-${{ steps.version.outputs.version }}.tar.gz
        # mv bin/filedo-Windows-X64.zip bin/filedo-Windows-X64-${{ steps.version.outputs.version }}.zip

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ steps.version.outputs.version }}
          body: ${{ steps.changelog_reader.outputs.latestBody }}
          draft: false
          prerelease: false

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          tag_name: v${{ steps.version.outputs.version }}
          name: ${{ steps.version.outputs.version }}
          body: ${{ steps.changelog_reader.outputs.latestBody }}
          files: |
            bin/filedo-Linux-X64-${{ steps.version.outputs.version }}.tar.gz
          # bin/filedo-MacOS-X64-${{ steps.version.outputs.version }}.tar.gz
          # bin/filedo-Windows-X64-${{ steps.version.outputs.version }}.zip
          fail_on_unmatched_files: true

      # - name: upload linux artifact
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ github.token }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: ./bin/filedo-Linux-X64.tar.gz
      #     asset_name: filedo-${{ steps.version.outputs.version }}-Linux-X64.tar.gz
      #     asset_content_type: application/gzip
      
      # - name: upload darwin artifact
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ github.token }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: ./bin/filedo-macOS-X64.tar.gz
      #     asset_name: filedo-${{ steps.version.outputs.version }}-macOS-X64.tar.gz
      #     asset_content_type: application/gzip
      
      # - name: upload windows artifact
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ github.token }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: ./bin/filedo-Windows-X64.zip
      #     asset_name: filedo-${{ steps.version.outputs.version }}-Windows-X64.zip
      #     asset_content_type: application/zip
